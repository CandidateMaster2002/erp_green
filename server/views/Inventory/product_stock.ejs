<%- include('../partials/headercode.ejs') %>
<!-- Atharv -->

<body>

    <!-- Layout wrapper -->
    <div class="layout-wrapper layout-content-navbar ">
        <div class="layout-container">

            <!-- sidebar imported -->
            <%- include('../partials/sidebar.ejs') %>

            <!-- Layout container -->
            <div class="layout-page">

                <!-- navbar imported -->
                <%- include('../partials/navbar.ejs') %>

                <!-- Content wrapper -->
                <div class="content-wrapper">

                    <!-- Content -->

                    <div class="container-xxl flex-grow-1 container-p-y">

                        <div class="d-flex justify-content-between m-0 p-0">
                            <h4 class="fw-bold py-3 mb-1">Inventory</h4>
                        </div>

                        <div class="d-flex justify-content-between m-0 p-0">
                            <div class="input-group input-group-merge">
                                <span class="input-group-text" id="basic-addon-search31"><i
                                            class="bx bx-search"></i></span>
                                <input type="text" class="form-control btn-responsive" placeholder="Search ..."
                                    onkeyup="var value = $(this).val().toLowerCase();$('#inventoryData tbody tr').filter(function() {$(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)});">
                                <div class="text-center mx-2 ">
                                    <a class="btn btn-danger btn-responsive " style="color: white;" id="nearExpiry">
                                          Near Expiry</a>
                                </div>
                                <div class="text-center mx-2">
                                    <a class="btn btn-primary btn-responsive" style="color: white;" href="/add_product">Add Product</a>
                                </div> 
                                <div class="text-center mx-2">
                                    <a class="btn btn-info btn-responsive" style="color: white;" href="/inventory/csv/upload">CSV Upload</a>
                                </div>
                            </div>
                        </div>

                        <hr class="mb-4">

                        <div class="card" id="inventoryData">
                            <h5 class="card-header">Product List</h5>
                            <div class="table-responsive text-nowrap" style="min-height: 60vh;">
                                <table class="table table-hover h-100">
                                    <thead>
                                        <tr>
                                            <th>
                                                <div>Product Name</div>
                                            </th>
                                            <th>
                                                <div>Pack Units</div>
                                            </th>
                                            <th>
                                                <div>HSN</div>
                                            </th>
                                            <th>
                                                <div>Rem Stock</div>
                                            </th>
                                            <th>
                                                <div>Status</div>
                                            </th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody class="table-border-bottom-0" id="additems">
                                        <!-- Inventory items will be loaded here by JavaScript -->
                                    </tbody>
                                </table>
                            </div>
                            <!-- Pagination Controls (Added here) -->
                            <div class="card-footer d-flex justify-content-end align-items-center flex-wrap">
                                <button class="btn btn-sm btn-outline-primary me-2" id="prevPageBtn" disabled>Previous</button>
                                <span class="me-2" id="paginationInfo">Page 1 of 1</span>
                                <button class="btn btn-sm btn-outline-primary" id="nextPageBtn" disabled>Next</button>
                            </div>
                        </div>

                    </div>
                    <!-- / Content -->

                    <div class="content-backdrop fade"></div>
                </div>
                <!-- Content wrapper -->
            </div>
            <!-- / Layout page -->
        </div>

        <!-- Overlay -->
        <div class="layout-overlay layout-menu-toggle"></div>

    </div>
    <!-- / Layout wrapper -->

    <%- include('../partials/footercode.ejs') %>

    <style>
        /* Custom CSS for mobile responsiveness */
        @media (max-width: 576px) {
            .btn-responsive {
                font-size: 13px; /* Adjust the font size for mobile */
                padding: 5px 10px; /* Adjust padding for mobile */
            }
        }
        /* Style to ensure buttons are not squeezed on small screens */
        .input-group-merge .btn-responsive {
            white-space: nowrap; /* Prevent text wrapping */
        }
        .input-group-merge > div {
            margin-right: 8px !important; /* Adjust spacing between buttons */
            margin-left: 0 !important;
        }
        .input-group-merge > div:last-child {
             margin-right: 0 !important;
        }
        @media (max-width: 768px) {
            .input-group-merge {
                flex-wrap: wrap; /* Allow wrapping on smaller screens */
            }
            .input-group-merge .input-group-text,
            .input-group-merge input {
                flex-basis: 100%; /* Make search input take full width */
                margin-bottom: 10px; /* Add space below search input */
            }
            .input-group-merge > div {
                flex-basis: auto; /* Buttons adjust their width */
                margin-bottom: 10px; /* Add space below buttons when wrapped */
            }
        }
    </style>

    <script>
        $(document).ready(function () {
            // Retrieve orgId from EJS variable
            var orgId = "<%=orgId%>";
            console.log("Org ID:", orgId);

            // Pagination state variables
            const itemsPerPage = 8; // You can adjust this number
            let currentPage = 1;
            let totalItems = 0;
            let totalPages = 1;

            // Function to load inventory data for a specific page
            function loadInventoryPage(pageNumber) {
                // Calculate offset based on page number
                const offset = (pageNumber - 1) * itemsPerPage;

                console.log(`Fetching page ${pageNumber} with limit ${itemsPerPage} and offset ${offset} for orgID ${orgId}`);

                // Show loading indicator or clear table before fetching
                $("#additems").empty(); // Clear existing table rows
                $("#additems").html('<tr><td colspan="6" class="text-center py-5"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div></td></tr>'); // Simple loading spinner

                // Make the AJAX call to the V2 paginated endpoint
                $.get(`/api/v2/inventory/paginated?orgID=${orgId}&limit=${itemsPerPage}&offset=${offset}`, function (result, status) {
                    if (result.success && result.data && result.data.data) { // Access result.data.data and result.data.totalCount
                        const inventoryItems = result.data.data;
                        totalItems = result.data.totalCount;
                        totalPages = Math.ceil(totalItems / itemsPerPage);
                        currentPage = pageNumber; // Update current page after successful fetch

                        $("#additems").empty(); // Clear loading spinner/old data

                        if (inventoryItems.length === 0) {
                            $("#additems").html('<tr><td colspan="6" class="text-center py-5">No inventory items found.</td></tr>');
                        } else {
                            // Render each inventory item
                            inventoryItems.forEach((item) => {
                                var inStock = item.batch_qty !== null && item.batch_qty !== undefined && item.batch_qty !== 0 ? item.batch_qty : "ADD BATCH";
                                var statusHtml = item.batch_qty !== null && item.threshold !== null && item.batch_qty >= item.threshold ?
                                    `<td><span class="badge bg-label-success me-1">OK</span></td>` :
                                    `<td><span class="badge bg-label-danger me-1">LOW</span></td>`; // Default to LOW if data is missing or below threshold


                                var html = `
                                    <tr>
                                        <td><i class="fab fa-angular fa-lg text-danger "></i><strong>${item.med_name || 'N/A'}</strong></td>
                                        <td>${item.primary_unit || 'N/A'} of ${item.secondary_unit || 'N/A'}</td>
                                        <td>${item.hsn || 'N/A'}</td>
                                        <td>${inStock}</td>
                                        ${statusHtml}
                                        <td>
                                            <div class="dropdown">
                                                <button type="button"
                                                    class="btn p-0 dropdown-toggle hide-arrow"
                                                    data-bs-toggle="dropdown"><i
                                                        class="bx bx-dots-vertical-rounded"></i></button>
                                                <div class="dropdown-menu">
                                                    <a class="dropdown-item" id="addbatch" href="/add_batch/${item.product_id}"><i class='bx bx-customize me-1'></i>Add Batch</a>
                                                    <a class="dropdown-item" id="viewbatches" href="/product_batch/${item.product_id}"><i class="bx bx-show me-1"></i>View Batches</a>
                                                    <a class="dropdown-item" id="editproduct" href="/update_addproduct/${item.product_id}"><i class="bx bx-edit-alt me-1"></i>Edit Product</a>
                                                    <a class="dropdown-item" id="deleteproduct" onclick="confirmDelete(${item.inventory_id})"><i class="bx bx-trash me-1"></i>Delete Product</a>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                `;
                                $("#additems").append(html);
                            });
                        }
                        updatePaginationControls(); // Update buttons and info after loading
                    } else {
                        console.error("API response error:", result.message || "Unknown error");
                        $("#additems").html('<tr><td colspan="6" class="text-center py-5 text-danger">Error loading inventory data.</td></tr>');
                    }
                }).fail(function(jqXHR, textStatus, errorThrown) {
                    console.error("AJAX Error:", textStatus, errorThrown, jqXHR.responseText);
                    $("#additems").html('<tr><td colspan="6" class="text-center py-5 text-danger">Failed to fetch inventory data. Please try again.</td></tr>');
                });
            }

            // Function to update the state of pagination buttons and info text
            function updatePaginationControls() {
                $('#paginationInfo').text(`Page ${currentPage} of ${totalPages}`);
                $('#prevPageBtn').prop('disabled', currentPage === 1);
                $('#nextPageBtn').prop('disabled', currentPage === totalPages || totalPages === 0);
            }

            // Click handlers for pagination buttons
            $('#prevPageBtn').click(function() {
                if (currentPage > 1) {
                    loadInventoryPage(currentPage - 1);
                }
            });

            $('#nextPageBtn').click(function() {
                if (currentPage < totalPages) {
                    loadInventoryPage(currentPage + 1);
                }
            });

            // Initial load of the first page when the document is ready
            loadInventoryPage(currentPage); // Load page 1 initially

            // Existing Near Expiry button click handler
            $("#nearExpiry").click(function () {
                window.location.href = `/near_expiry_list`;
            });
        });

        // Moved outside $(document).ready for global access by onclick attribute
        function confirmDelete(inventoryId) {
            // Using a custom modal dialog is recommended instead of window.confirm for better UX.
            // For now, keeping window.confirm as per your original code.
            var confirmation = window.confirm("Are you sure you want to delete this product from inventory?");

            if (confirmation) {
                $.ajax({
                    url: '/api/v2/inventory/' + inventoryId,
                    type: 'DELETE',
                    success: function (result) {
                        // Instead of full reload, reload current page data for better UX
                        if (result.success) {
                            alert('Product deleted successfully!'); // Use custom modal here
                            // Re-load the current page to reflect deletion
                            loadInventoryPage(currentPage);
                        } else {
                            alert('Failed to delete product: ' + result.message); // Use custom modal here
                        }
                    },
                    error: function (error) {
                        console.error("Error deleting product: ", error);
                        alert('Error deleting product. Please try again.'); // Use custom modal here
                    }
                });
            }
        }
    </script>
    <script>
        // Existing showFileName function for CSV upload
        function showFileName() {
            const fileInput = document.getElementById('fileInput');
            const fileName = document.getElementById('fileName');
            const file = fileInput.files[0];
            if (file) {
                fileName.textContent = `Selected file: ${file.name}`;
            } else {
                fileName.textContent = 'No file selected.';
            }
        }
    </script>
</body>
</html>


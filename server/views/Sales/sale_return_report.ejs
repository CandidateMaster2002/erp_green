<%- include('../partials/headercode.ejs') %>

<body>
    <!-- Layout wrapper -->
    <div class="layout-wrapper layout-content-navbar">
        <div class="layout-container">
            <!-- sidebar imported -->
            <%- include('../partials/sidebar.ejs') %>

            <!-- Layout page -->
            <div class="layout-page">
                <!-- navbar imported -->
                <%- include('../partials/navbar.ejs') %>

                <!-- Content wrapper -->
                <div class="content-wrapper">
                    <!-- Content -->
                    <div class="container-xxl flex-grow-1 container-p-y">
                        <h4 class="fw-bold py-3 mb-1"> Sales Return Report</h4>
                        <hr class="mb-4">

                        <div>
                            <div class="card mb-4" id="date-range-filter">
                                <div class="row align-items-center flex ">
                                    <div class="col-md-2  text-center">
                                        <h5 class="card-header mb-2">From Date</h5>
                                    </div>
                                    <div class="col-md-4 ">
                                        <div class="card-header">
                                            <input class="form-control" type="date" id="from-date-input" name="fromdate" />
                                        </div> //
                                    </div>
                                    <div class="col-md-2 text-center">
                                        <h5 class="card-header mb-2">To Date</h5>
                                    </div>
                                    <div class="col-md-4 ">
                                        <div class="card-header">
                                            <input class="form-control" type="date" id="to-date-input" name="todate" />
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="card mb-4">
                                <div class="row">
                                    <div class="col-md-3 text-center">
                                        <h5 class="card-header">
                                            <input type="radio" name="radio" value="daterange" checked> Date Range
                                        </h5>
                                    </div>
                                    <div class="col-md-3 text-center">
                                        <h5 class="card-header">
                                            <input type="radio" name="radio" value="monthly"> Monthly
                                        </h5>
                                    </div>
                                    <div class="col-md-3 text-center">
                                        <h5 class="card-header">
                                            <input type="radio" name="radio" value="quarterly"> Quarterly
                                        </h5>
                                    </div>
                                    <div class="col-md-3 text-center">
                                        <h5 class="card-header">
                                            <input type="radio" name="radio" value="yearly"> Yearly
                                        </h5>
                                    </div>
                                </div>
                                <div id="dropdown"></div>
                            </div>
                        </div>

                        <div class="text-center mb-4">
                            <button type="button" class="btn btn-primary" id="generateReturnReport">Generate Report</button>
                        </div>

                        <!-- Report List -->
                        <div class="card">
                            <h5 class="card-header">Report</h5>
                            <div class="card-body">
                                <div class="table-responsive text-nowrap">
                                    <table class="table table-bordered">
                                        <thead>
                                            <tr>
                                                <th>#</th>
                                                <th>Invoice No.</th>
                                                <th>Customer Name</th>
                                                <th>Total Amount</th>
                                                <th>Date</th>
                                                <th>Time</th>
                                            </tr>
                                        </thead>
                                        <tbody id="reportcart">
                                            <!-- Data will be dynamically inserted here -->
                                        </tbody>
                                    </table>
                                </div>
                                <div class="table-footer bg-light position-sticky" style="bottom: 0;">
                                    <table class="table">
                                        <tfoot>
                                            <tr class="table-success">
                                                <td class="h5 ps-5">Total Return Amount</td>
                                                <td class="h5 text-end" id="totalReturnAmount"></td>
                                            </tr>
                                        </tfoot>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <!-- / Report List -->

                        <!-- Chart Section for Sales Return -->
                        <div class="card mt-4 mb-4">
                            <h5 class="card-header">Sales Return Overview Chart</h5>
                            <div class="card-body">
                                <canvas id="salesReturnChart"></canvas>
                            </div>
                        </div>
                        <!-- / Chart Section -->
                    </div>
                    <!-- / Content -->
                    <div class="content-backdrop fade"></div>
                </div>
                <!-- Content wrapper -->
            </div>
            <!-- / Layout page -->
        </div>
        <!-- Overlay -->
        <div class="layout-overlay layout-menu-toggle"></div>
    </div>
    <!-- / Layout wrapper -->

    <%- include('../partials/footercode.ejs') %>
    <!-- Chart.js CDN Link -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.3/dist/chart.umd.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/moment@2.29.4/moment.min.js"></script>
    <script>
        // Declare a global variable to hold the Chart.js instance for sales returns.
        let mySalesReturnChart;

        $(document).ready(function () {
            const today = new Date();
            const dd = String(today.getDate()).padStart(2, '0');
            const mm = String(today.getMonth() + 1).padStart(2, '0');
            const currentFullYear = today.getFullYear();

            function populateYearDropdown(selectorId) {
                const dynamicCurrentYear = new Date().getFullYear();
                $(selectorId).empty().append('<option selected value="">Please Select</option>');
                for (let i = -5; i <= 5; i++) {
                    const year = dynamicCurrentYear + i;
                    $(selectorId).append(`<option value="${year}">${year}</option>`);
                }
                $(selectorId).val(dynamicCurrentYear);
            }

            function getXAxisLabel(filterType) {
                if (filterType === 'monthly' || filterType === 'daterange') return 'Date';
                if (filterType === 'quarterly') return 'Quarter / Year';
                if (filterType === 'yearly') return 'Month / Year';
                return 'Period';
            }
            
            // Renders or updates the sales return chart based on the provided sales data.
            function renderSalesReturnChart(returnItems, filterType) {
                const ctx = document.getElementById('salesReturnChart');
                if (!ctx) {
                    console.error("ERROR: Canvas element with ID 'salesReturnChart' not found!");
                    return;
                }
                if (mySalesReturnChart) {
                    mySalesReturnChart.destroy();
                }
                if (!returnItems || returnItems.length === 0) {
                    mySalesReturnChart = null;
                    return;
                }
                let aggregatedData = {};
                let chartType = 'bar';

                returnItems.forEach(item => {
                    let key;
                    const returnDate = moment(item.return_created_date);
                    if (filterType === 'monthly' || filterType === 'daterange') {
                        key = returnDate.format('YYYY-MM-DD');
                        chartType = 'line';
                    } else if (filterType === 'quarterly') {
                        const year = returnDate.year();
                        const month = returnDate.month() + 1;
                        let quarter;
                        if (month >= 4 && month <= 6) { quarter = 'Q1'; }
                        else if (month >= 7 && month <= 9) { quarter = 'Q2'; }
                        else if (month >= 10 && month <= 12) { quarter = 'Q3'; }
                        else { quarter = 'Q4'; }
                        key = `${year} ${quarter}`;
                        chartType = 'bar';
                    } else if (filterType === 'yearly') {
                        key = returnDate.format('YYYY-MM');
                        chartType = 'line';
                    } else {
                        key = returnDate.format('YYYY-MM-DD');
                        chartType = 'line';
                    }
                    if (!aggregatedData[key]) {
                        aggregatedData[key] = 0;
                    }
                    aggregatedData[key] += item.return_amount;
                });

                const sortedKeys = Object.keys(aggregatedData).sort();
                const labels = sortedKeys.map(key => {
                    if (filterType === 'monthly' || filterType === 'daterange') {
                        return moment(key).format('MMM D,YYYY');
                    } else if (filterType === 'yearly') {
                        return moment(key).format('MMM YYYY');
                    }
                    return key;
                });
                const dataValues = sortedKeys.map(key => aggregatedData[key].toFixed(2));
                
                // --- Chart.js Configuration and Initialization ---
                mySalesReturnChart = new Chart(ctx, {
                    type: chartType,
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Total Return Amount (₹)',
                            data: dataValues,
                            backgroundColor: chartType === 'bar' ? 'rgba(255, 99, 132, 0.8)' : 'rgba(255, 99, 132, 0.4)',
                            borderColor: 'rgba(255, 99, 132, 1)',
                            borderWidth: 1,
                            fill: chartType === 'line' ? true : false,
                            tension: chartType === 'line' ? 0.4 : 0
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            title: {
                                display: true,
                                text: `Sales Return Overview: ${filterType.charAt(0).toUpperCase() + filterType.slice(1)}`
                            },
                            legend: {
                                display: true,
                                position: 'top'
                            }
                        },
                        scales: {
                            x: {
                                beginAtZero: true,
                                title: {
                                    display: true,
                                    text: getXAxisLabel(filterType)
                                }
                            },
                            y: {
                                beginAtZero: true,
                                title: {
                                    display: true,
                                    text: 'Amount (₹)'
                                }
                            }
                        }
                    }
                });
            }

            // Set initial dates for the 'From Date' and 'To Date' inputs
            $("#from-date-input").val(`${currentFullYear}-${mm}-${dd}`);
            $("#to-date-input").val(`${currentFullYear}-${mm}-${dd}`);

            $("#dropdown").empty();
            $('#date-range-filter').show();
            $('input[name="radio"][value="daterange"]').prop('checked', true);

            var urlParams = new URLSearchParams(window.location.search);
            if (urlParams.get('filter') == 'currentFY') {
                const fyCurrentYear = new Date().getFullYear();
                const fyCurrentMonth = new Date().getMonth();
                let fyStartYear;
                let fyEndYear;
                if (fyCurrentMonth < 3) {
                    fyStartYear = fyCurrentYear - 1;
                    fyEndYear = fyCurrentYear;
                } else {
                    fyStartYear = fyCurrentYear;
                    fyEndYear = fyCurrentYear + 1;
                }
                const fyStartDate = `${fyStartYear}-04-01`;
                const fyEndDate = `${fyEndYear}-03-31`;
                $("#from-date-input").val(fyStartDate);
                $("#to-date-input").val(fyEndDate);
                $('input[name="radio"][value="daterange"]').prop('checked', true);
                $('#date-range-filter').show();
                $("#dropdown").empty();
                generateReturnReport();
            }

            $('input[name="radio"]').on('click', function () {
                const selectedValue = $(this).val();
                $('#date-range-filter').hide();
                $("#dropdown").empty();
                $("#reportcart").empty();
                $("#totalReturnAmount").text(`₹0.00`);
                if (mySalesReturnChart) {
                    mySalesReturnChart.destroy();
                    mySalesReturnChart = null;
                }
                if (selectedValue === 'daterange') {
                    $('#date-range-filter').show();
                    $("#from-date-input").val(`${currentFullYear}-${mm}-${dd}`);
                    $("#to-date-input").val(`${currentFullYear}-${mm}-${dd}`);
                } else if (selectedValue === 'monthly') {
                    $("#dropdown").html(`
                        <div class="card-body">
                            <div class="row justify-content-center">
                                <div class="col-md-6 col-12 text-center mb-2">
                                    <select class="form-select" id="selectmonth" aria-label="Default select example">
                                        <option selected value="">Please Select</option>
                                        <option value="1">January</option><option value="2">February</option><option value="3">March</option>
                                        <option value="4">April</option><option value="5">May</option><option value="6">June</option>
                                        <option value="7">July</option><option value="8">August</option><option value="9">September</option>
                                        <option value="10">October</option><option value="11">November</option><option value="12">December</option>
                                    </select>
                                </div>
                                <div class="col-md-6 col-12 text-center mb-2">
                                    <select class="form-select" id="month-selectyear" aria-label="Default select example"></select>
                                </div>
                            </div>
                        </div>
                    `);
                    populateYearDropdown('#month-selectyear');
                    $('#selectmonth').val(new Date().getMonth() + 1);
                } else if (selectedValue === 'quarterly') {
                    $("#dropdown").html(`
                        <div class="card-body">
                            <div class="row justify-content-center">
                                <div class="col-md-6 col-12 text-center mb-2">
                                    <select class="form-select" id="selectquarter" aria-label="Default select example">
                                        <option selected value="">Please Select</option>
                                        <option value="1">April-June (Q1)</option>
                                        <option value="2">July-Sept (Q2)</option>
                                        <option value="3">Oct-Dec (Q3)</option>
                                        <option value="4">Jan-March (Q4)</option>
                                    </select>
                                </div>
                                <div class="col-md-6 col-12 text-center mb-2">
                                    <select class="form-select" id="quarter-selectyear" aria-label="Default select example"></select>
                                </div>
                            </div>
                        </div>
                    `);
                    populateYearDropdown('#quarter-selectyear');
                    const currentMonth = new Date().getMonth() + 1;
                    if (currentMonth >= 4 && currentMonth <= 6) $('#selectquarter').val('1');
                    else if (currentMonth >= 7 && currentMonth <= 9) $('#selectquarter').val('2');
                    else if (currentMonth >= 10 && currentMonth <= 12) $('#selectquarter').val('3');
                    else if (currentMonth >= 1 && currentMonth <= 3) $('#selectquarter').val('4');
                } else if (selectedValue === 'yearly') {
                    $("#dropdown").html(`
                        <div class="card-body">
                            <div class="col-md-12 text-center mb-2">
                                <select class="form-select" id="selectyear" aria-label="Default select example" style="width: 100%;"></select>
                            </div>
                        </div>
                    `);
                    populateYearDropdown('#selectyear');
                }
            });

            function generateReturnReport() {
                let apiUrl = `/api/v2/saleReturns?orgId=<%=orgId%>`;
                const selectedFilterType = $('input[name="radio"]:checked').val();
                if (!selectedFilterType) {
                    alert("Please select a report filter type (Date Range, Monthly, Quarterly, or Yearly).");
                    return;
                }
                if (selectedFilterType === 'daterange') {
                    const fromDate = $("#from-date-input").val();
                    const toDate = $("#to-date-input").val();
                    if (!fromDate || !toDate) {
                        alert("Please select both From Date and To Date for Date Range filter.");
                        return;
                    }
                    apiUrl += `&startDate=${fromDate}&endDate=${toDate}`;
                } else if (selectedFilterType === 'monthly') {
                    const month = $('#selectmonth').val();
                    const year = $('#month-selectyear').val();
                    if (!month || !year) {
                        alert("Please select a Month and Year for Monthly filter.");
                        return;
                    }
                    apiUrl += `&month=${month}&year=${year}`;
                } else if (selectedFilterType === 'quarterly') {
                    const quarter = $('#selectquarter').val();
                    const year = $('#quarter-selectyear').val();
                    if (!quarter || !year) {
                        alert("Please select a Quarter and Year for Quarterly filter.");
                        return;
                    }
                    apiUrl += `&quarter=${quarter}&year=${year}`;
                } else if (selectedFilterType === 'yearly') {
                    const year = $('#selectyear').val();
                    if (!year) {
                        alert("Please select a Year for Yearly filter.");
                        return;
                    }
                    apiUrl += `&year=${year}`;
                }

                $.get(apiUrl, function (data, status) {
                    console.log("AJAX Success for sales returns! Data:", data, "Status:", status); 
                    $("#reportcart").empty();
                    let totalReturnAmount = 0;
                     // Now checking for the nested `data.data` as the actual array
                    if (data.data && data.data.data && data.data.data.length > 0) {
                        var items = data.data.data; // CORRECTED: Access the nested 'data' property
                        console.log("Return Items for table and chart (from data.data.data):", items); 
                        console.log("Number of items:", items.length);
                        
                        for (let i = 0; i < items.length; i++) {
                            totalReturnAmount += items[i].return_amount;
                            var datetime = items[i].return_created_date;
                            var date = moment(datetime).format('DD MMMM YYYY');
                            var time = moment(datetime).utcOffset('+05:30');
                            var localTime = time.format('hh:mm A');
                            var htmlData = `
                                <tr>
                                    <td>${i + 1}</td>
                                    <td><i class="fab fa-angular fa-lg text-danger me-3"></i><a href="/return_receipt/${items[i].return_id}" > <strong>${items[i].return_invoice_id}</strong></a></td>
                                    <td>${items[i].cust_name}</td>
                                    <td class="text-end">₹${items[i].return_amount.toFixed(2)}</td>
                                    <td>${date}</td>
                                    <td>${localTime}</td>
                                </tr>
                            `;
                            $("#reportcart").append(htmlData);
                            console.log(`Appended row ${i + 1}: ${htmlData.trim().substring(0, 50)}...`);
                        }
                        $("#totalReturnAmount").text(`₹${totalReturnAmount.toFixed(2)}`);
                        console.log("Total Return Amount updated to:", `₹${totalReturnAmount.toFixed(2)}`); 
                        renderSalesReturnChart(items, selectedFilterType);
                        console.log("Sales return chart rendering initiated."); 
                    } else {
                        console.log("No sales return data found for the selected period (else block triggered)."); 
                        $("#reportcart").append('<tr><td colspan="6" class="text-center">No sales return data found for the selected period.</td></tr>');
                        $("#totalReturnAmount").text(`₹0.00`);
                        if (mySalesReturnChart) {
                            mySalesReturnChart.destroy();
                            mySalesReturnChart = null;
                        }
                    }
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    console.error("AJAX Error for sales returns! Text Status:", textStatus, "Error Thrown:", errorThrown, "JQ XHR:", jqXHR);
                    $("#reportcart").empty().append('<tr><td colspan="6" class="text-center text-danger">Error loading sales return report. Please try again.</td></tr>');
                    $("#totalReturnAmount").text(`₹0.00`);
                    if (mySalesReturnChart) {
                        mySalesReturnChart.destroy();
                        mySalesReturnChart = null;
                    }
                });
            }

            $("#generateReturnReport").click(function () {
                generateReturnReport();
            });
        });
    </script>
    <style>
        #dropdown div {
            margin: 0;
            padding-top: 0;
            padding-bottom: 2px;
        }

        @media (max-width: 767px) {
            .card-body.d-flex .row.w-100 {
                display: flex;
                flex-direction: column;
                justify-content: start;
                align-items: flex-start;
            }

            .col-6 {
                flex: 0 0 50%;
                max-width: 50%;
            }

            .text-center select {
                width: 100%;
            }

            .card-header {
                font-size: 0.75em;
                display: flex;
                justify-content: flex-start;
                align-items: flex-start;
                padding: 10px;
            }

            .card-header input {
                margin-right: 0.5rem;
            }

            .row div {
                display: inline-flex;
                flex-direction: column;
            }
        }
    </style>
</body>
</html>